# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      npm install jslint
      exit 1
  displayName: Install SonarScanner

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      curl -s -O https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.5.0.2216-linux.zip
      unzip sonar-scanner-cli-4.5.0.2216-linux.zip 
  displayName: Install SonarScanner

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      cd static
      ../sonar-scanner-4.5.0.2216-linux/bin/sonar-scanner -Dsonar.projectKey=frontend -Dsonar.sources=. -Dsonar.host.url=http://3.129.24.199:9000 -Dsonar.login=bbc2d2a7c3302ff6626736d3e542b668419db3e7 
  displayName: Run SonarScan

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      mkdir publish
      cp -r static/* publish
      cd publish
  displayName: Prepare Artifacts
      
- task: UniversalPackages@0
  inputs:
    command: 'publish'
    publishDirectory: '$(Build.SourcesDirectory)/publish'
    feedsToUsePublish: 'internal'
    vstsFeedPublish: 'ce99914a-0f7d-4c46-9ccc-e4d025115ea9/f0174cff-2623-4600-a29f-0eb8a06b0a0c'
    vstsFeedPackagePublish: 'frontend'
    versionOption: 'patch'
    packagePublishDescription: 'RoboShop Frontend'
  displayName: Publish Artifacts